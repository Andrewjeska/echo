// Code generated by protoc-gen-go. DO NOT EDIT.
// source: log/v1beta/SmokeSignalResult.proto

package v1beta

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf1 "github.com/golang/protobuf/ptypes/duration"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// [START messages]
type SmokeSignalResult struct {
	Uuid       string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Check_Name string `protobuf:"bytes,2,opt,name=check_Name,json=checkName" json:"check_Name,omitempty"`
	Verb       string `protobuf:"bytes,3,opt,name=verb" json:"verb,omitempty"`
	Url        string `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
	// generally only applies to post requests
	ContentLength  int64  `protobuf:"varint,5,opt,name=contentLength" json:"contentLength,omitempty"`
	ContentType    string `protobuf:"bytes,6,opt,name=contentType" json:"contentType,omitempty"`
	ConentEncoding string `protobuf:"bytes,7,opt,name=conentEncoding" json:"conentEncoding,omitempty"`
	StatusCode     int32  `protobuf:"varint,8,opt,name=statusCode" json:"statusCode,omitempty"`
	// response fields
	Elapsed           *google_protobuf1.Duration `protobuf:"bytes,9,opt,name=elapsed" json:"elapsed,omitempty"`
	Err               string                     `protobuf:"bytes,10,opt,name=err" json:"err,omitempty"`
	CertNearingExpiry bool                       `protobuf:"varint,11,opt,name=certNearingExpiry" json:"certNearingExpiry,omitempty"`
	CertExpired       bool                       `protobuf:"varint,12,opt,name=certExpired" json:"certExpired,omitempty"`
	Response          string                     `protobuf:"bytes,13,opt,name=response" json:"response,omitempty"`
}

func (m *SmokeSignalResult) Reset()                    { *m = SmokeSignalResult{} }
func (m *SmokeSignalResult) String() string            { return proto.CompactTextString(m) }
func (*SmokeSignalResult) ProtoMessage()               {}
func (*SmokeSignalResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *SmokeSignalResult) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *SmokeSignalResult) GetCheck_Name() string {
	if m != nil {
		return m.Check_Name
	}
	return ""
}

func (m *SmokeSignalResult) GetVerb() string {
	if m != nil {
		return m.Verb
	}
	return ""
}

func (m *SmokeSignalResult) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *SmokeSignalResult) GetContentLength() int64 {
	if m != nil {
		return m.ContentLength
	}
	return 0
}

func (m *SmokeSignalResult) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *SmokeSignalResult) GetConentEncoding() string {
	if m != nil {
		return m.ConentEncoding
	}
	return ""
}

func (m *SmokeSignalResult) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *SmokeSignalResult) GetElapsed() *google_protobuf1.Duration {
	if m != nil {
		return m.Elapsed
	}
	return nil
}

func (m *SmokeSignalResult) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *SmokeSignalResult) GetCertNearingExpiry() bool {
	if m != nil {
		return m.CertNearingExpiry
	}
	return false
}

func (m *SmokeSignalResult) GetCertExpired() bool {
	if m != nil {
		return m.CertExpired
	}
	return false
}

func (m *SmokeSignalResult) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func init() {
	proto.RegisterType((*SmokeSignalResult)(nil), "logv1beta.SmokeSignalResult")
}

func init() { proto.RegisterFile("log/v1beta/SmokeSignalResult.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 357 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xcf, 0x4e, 0xe3, 0x30,
	0x10, 0xc6, 0x95, 0x4d, 0xff, 0x65, 0xba, 0x5d, 0x6d, 0x7d, 0xf2, 0x56, 0xda, 0x2a, 0xaa, 0x10,
	0x0a, 0x02, 0x25, 0x82, 0xbe, 0x01, 0xd0, 0x1b, 0xea, 0x21, 0xe5, 0xc4, 0x05, 0x39, 0xc9, 0xe0,
	0x46, 0x75, 0xed, 0xc8, 0x76, 0x2a, 0xfa, 0x54, 0xbc, 0x22, 0x8a, 0x43, 0xa1, 0xd0, 0xdb, 0xcc,
	0x6f, 0xbe, 0xb1, 0xf5, 0x7d, 0x36, 0xcc, 0x84, 0xe2, 0xc9, 0xee, 0x3a, 0x43, 0xcb, 0x92, 0xd5,
	0x56, 0x6d, 0x70, 0x55, 0x72, 0xc9, 0x44, 0x8a, 0xa6, 0x16, 0x36, 0xae, 0xb4, 0xb2, 0x8a, 0x04,
	0x42, 0xf1, 0x56, 0x32, 0x99, 0x72, 0xa5, 0xb8, 0xc0, 0xc4, 0x0d, 0xb2, 0xfa, 0x25, 0xb9, 0xaf,
	0x35, 0xb3, 0xa5, 0x92, 0xad, 0x74, 0xf6, 0xe6, 0xc3, 0xf8, 0xe4, 0x18, 0x42, 0xa0, 0x53, 0xd7,
	0x65, 0x41, 0xbd, 0xd0, 0x8b, 0x82, 0xd4, 0xd5, 0xe4, 0x3f, 0x40, 0xbe, 0xc6, 0x7c, 0xf3, 0xbc,
	0x64, 0x5b, 0xa4, 0xbf, 0xdc, 0x24, 0x70, 0xa4, 0x01, 0xcd, 0xca, 0x0e, 0x75, 0x46, 0xfd, 0x76,
	0xa5, 0xa9, 0xc9, 0x5f, 0xf0, 0x6b, 0x2d, 0x68, 0xc7, 0xa1, 0xa6, 0x24, 0x67, 0x30, 0xca, 0x95,
	0xb4, 0x28, 0xed, 0x03, 0x4a, 0x6e, 0xd7, 0xb4, 0x1b, 0x7a, 0x91, 0x9f, 0x7e, 0x87, 0x24, 0x84,
	0xe1, 0x07, 0x78, 0xdc, 0x57, 0x48, 0x7b, 0x6e, 0xff, 0x18, 0x91, 0x73, 0xf8, 0x93, 0x2b, 0x89,
	0xd2, 0x2e, 0x64, 0xae, 0x8a, 0x52, 0x72, 0xda, 0x77, 0xa2, 0x1f, 0x94, 0x4c, 0x01, 0x8c, 0x65,
	0xb6, 0x36, 0x77, 0xaa, 0x40, 0x3a, 0x08, 0xbd, 0xa8, 0x9b, 0x1e, 0x11, 0x32, 0x87, 0x3e, 0x0a,
	0x56, 0x19, 0x2c, 0x68, 0x10, 0x7a, 0xd1, 0xf0, 0xe6, 0x5f, 0xdc, 0x06, 0x16, 0x1f, 0x02, 0x8b,
	0x0f, 0x81, 0xa5, 0x07, 0x65, 0x63, 0x0b, 0xb5, 0xa6, 0xd0, 0xda, 0x42, 0xad, 0xc9, 0x15, 0x8c,
	0x73, 0xd4, 0x76, 0x89, 0x4c, 0x97, 0x92, 0x2f, 0x5e, 0xab, 0x52, 0xef, 0xe9, 0x30, 0xf4, 0xa2,
	0x41, 0x7a, 0x3a, 0x70, 0xf6, 0x50, 0x5b, 0xd7, 0x61, 0x41, 0x7f, 0x3b, 0xdd, 0x31, 0x22, 0x13,
	0x18, 0x68, 0x34, 0x95, 0x92, 0x06, 0xe9, 0xc8, 0x5d, 0xf3, 0xd9, 0xdf, 0x5e, 0x3e, 0x5d, 0xf0,
	0xd2, 0xc6, 0x99, 0x40, 0x59, 0x08, 0x96, 0x99, 0x38, 0x57, 0xdb, 0xc4, 0x75, 0xed, 0x23, 0x9b,
	0xe4, 0xeb, 0x87, 0x64, 0x3d, 0x87, 0xe6, 0xef, 0x01, 0x00, 0x00, 0xff, 0xff, 0x6e, 0xe9, 0xca,
	0xad, 0x36, 0x02, 0x00, 0x00,
}
