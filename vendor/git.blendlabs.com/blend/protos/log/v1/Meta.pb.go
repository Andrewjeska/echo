// Code generated by protoc-gen-go. DO NOT EDIT.
// source: log/v1/Meta.proto

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// [START messages]
type Meta struct {
	// Timestamp of the message
	Timestamp *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	// uid
	Uid string `protobuf:"bytes,2,opt,name=uid" json:"uid,omitempty"`
	// labels can include hostname, etc.
	Labels map[string]string `protobuf:"bytes,3,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// annotations are things you can't filter by, and can be longer
	Annotations map[string]string `protobuf:"bytes,4,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Meta) Reset()                    { *m = Meta{} }
func (m *Meta) String() string            { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()               {}
func (*Meta) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *Meta) GetTimestamp() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Meta) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *Meta) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Meta) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func init() {
	proto.RegisterType((*Meta)(nil), "logv1.Meta")
}

func init() { proto.RegisterFile("log/v1/Meta.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0x69, 0xbb, 0x0d, 0xfa, 0x7a, 0x99, 0x41, 0xb0, 0x14, 0xc1, 0x22, 0x88, 0x3d, 0x25,
	0x6c, 0x5e, 0xa6, 0x87, 0x81, 0x82, 0x37, 0xbd, 0x14, 0x4f, 0xde, 0x12, 0x17, 0x43, 0x31, 0xcd,
	0x1b, 0x4b, 0x5a, 0xd8, 0x3f, 0xe7, 0xdf, 0x26, 0x4d, 0x36, 0x57, 0xbc, 0x79, 0x7b, 0x5f, 0xbe,
	0xef, 0xf7, 0xf8, 0x92, 0xc0, 0x99, 0x46, 0xc5, 0xfa, 0x05, 0x7b, 0x95, 0x8e, 0xd3, 0xed, 0x0e,
	0x1d, 0x92, 0xa9, 0x46, 0xd5, 0x2f, 0x8a, 0x2b, 0x85, 0xa8, 0xb4, 0x64, 0xfe, 0x50, 0x74, 0x9f,
	0xec, 0xad, 0x69, 0xa5, 0x75, 0xbc, 0xdd, 0x86, 0xdc, 0xf5, 0x77, 0x0c, 0x93, 0x01, 0x23, 0x2b,
	0x48, 0xdd, 0xd1, 0xcb, 0xa3, 0x32, 0xaa, 0xb2, 0x65, 0x41, 0x03, 0x4d, 0x8f, 0x34, 0xfd, 0xa5,
	0xeb, 0x53, 0x98, 0xcc, 0x21, 0xe9, 0x9a, 0x4d, 0x1e, 0x97, 0x51, 0x95, 0xd6, 0xc3, 0x48, 0x18,
	0xcc, 0x34, 0x17, 0x52, 0xdb, 0x3c, 0x29, 0x93, 0x2a, 0x5b, 0x5e, 0x50, 0xdf, 0x86, 0xfa, 0x7e,
	0x2f, 0xde, 0x79, 0x36, 0x6e, 0xb7, 0xaf, 0x0f, 0x31, 0xb2, 0x86, 0x8c, 0x1b, 0x83, 0x8e, 0xbb,
	0x06, 0x8d, 0xcd, 0x27, 0x9e, 0xba, 0x1c, 0x53, 0x8f, 0x27, 0x3b, 0xa0, 0x63, 0xa0, 0xb8, 0x87,
	0x6c, 0xb4, 0x76, 0x68, 0xf4, 0x25, 0xf7, 0xfe, 0x16, 0x69, 0x3d, 0x8c, 0xe4, 0x1c, 0xa6, 0x3d,
	0xd7, 0x9d, 0x3c, 0xb4, 0x0c, 0xe2, 0x21, 0x5e, 0x45, 0xc5, 0x1a, 0xe6, 0x7f, 0x77, 0xff, 0x87,
	0x7f, 0xba, 0x7d, 0xbf, 0x51, 0x8d, 0xa3, 0x42, 0x4b, 0xb3, 0xd1, 0x5c, 0x58, 0xfa, 0x81, 0x2d,
	0xf3, 0x2a, 0x3c, 0xba, 0x65, 0xe1, 0x73, 0xc4, 0xcc, 0xcb, 0xbb, 0x9f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x22, 0x7a, 0xfd, 0xd3, 0xad, 0x01, 0x00, 0x00,
}
