// Code generated by protoc-gen-go. DO NOT EDIT.
// source: collector/v1/Collector.proto

/*
Package v1 is a generated protocol buffer package.

It is generated from these files:
	collector/v1/Collector.proto

It has these top-level messages:
	ReceiveSummary
*/
package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import logv11 "git.blendlabs.com/blend/protos/log/v1"
import google_protobuf1 "github.com/golang/protobuf/ptypes/duration"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ReceiveSummary is a digest of messages processed.
type ReceiveSummary struct {
	// The number of messages received.
	MessageCount int32 `protobuf:"varint,1,opt,name=message_count,json=messageCount" json:"message_count,omitempty"`
	// The elapsed time while processing.
	Elapsed *google_protobuf1.Duration `protobuf:"bytes,2,opt,name=elapsed" json:"elapsed,omitempty"`
}

func (m *ReceiveSummary) Reset()                    { *m = ReceiveSummary{} }
func (m *ReceiveSummary) String() string            { return proto.CompactTextString(m) }
func (*ReceiveSummary) ProtoMessage()               {}
func (*ReceiveSummary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ReceiveSummary) GetMessageCount() int32 {
	if m != nil {
		return m.MessageCount
	}
	return 0
}

func (m *ReceiveSummary) GetElapsed() *google_protobuf1.Duration {
	if m != nil {
		return m.Elapsed
	}
	return nil
}

func init() {
	proto.RegisterType((*ReceiveSummary)(nil), "collectorv1.ReceiveSummary")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Collector service

type CollectorClient interface {
	// PushAudit takes a stream of audit messages.
	Push(ctx context.Context, opts ...grpc.CallOption) (Collector_PushClient, error)
}

type collectorClient struct {
	cc *grpc.ClientConn
}

func NewCollectorClient(cc *grpc.ClientConn) CollectorClient {
	return &collectorClient{cc}
}

func (c *collectorClient) Push(ctx context.Context, opts ...grpc.CallOption) (Collector_PushClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Collector_serviceDesc.Streams[0], c.cc, "/collectorv1.Collector/Push", opts...)
	if err != nil {
		return nil, err
	}
	x := &collectorPushClient{stream}
	return x, nil
}

type Collector_PushClient interface {
	Send(*logv11.Message) error
	CloseAndRecv() (*ReceiveSummary, error)
	grpc.ClientStream
}

type collectorPushClient struct {
	grpc.ClientStream
}

func (x *collectorPushClient) Send(m *logv11.Message) error {
	return x.ClientStream.SendMsg(m)
}

func (x *collectorPushClient) CloseAndRecv() (*ReceiveSummary, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ReceiveSummary)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Collector service

type CollectorServer interface {
	// PushAudit takes a stream of audit messages.
	Push(Collector_PushServer) error
}

func RegisterCollectorServer(s *grpc.Server, srv CollectorServer) {
	s.RegisterService(&_Collector_serviceDesc, srv)
}

func _Collector_Push_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CollectorServer).Push(&collectorPushServer{stream})
}

type Collector_PushServer interface {
	SendAndClose(*ReceiveSummary) error
	Recv() (*logv11.Message, error)
	grpc.ServerStream
}

type collectorPushServer struct {
	grpc.ServerStream
}

func (x *collectorPushServer) SendAndClose(m *ReceiveSummary) error {
	return x.ServerStream.SendMsg(m)
}

func (x *collectorPushServer) Recv() (*logv11.Message, error) {
	m := new(logv11.Message)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Collector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "collectorv1.Collector",
	HandlerType: (*CollectorServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Push",
			Handler:       _Collector_Push_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "collector/v1/Collector.proto",
}

func init() { proto.RegisterFile("collector/v1/Collector.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x50, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x35, 0xe2, 0x07, 0x6e, 0xb5, 0x87, 0xc5, 0x43, 0x8d, 0x22, 0xa5, 0x5e, 0x02, 0xe2, 0x2c,
	0x69, 0x0f, 0xde, 0x6d, 0xaf, 0x82, 0xc4, 0x9b, 0x17, 0xd9, 0x6c, 0xc7, 0x35, 0x32, 0xc9, 0x94,
	0xec, 0x6e, 0xc0, 0x7f, 0x2f, 0xcd, 0x36, 0xa5, 0x1e, 0xdf, 0x07, 0xf3, 0xde, 0x1b, 0x71, 0x67,
	0x98, 0x08, 0x8d, 0xe7, 0x56, 0x75, 0xb9, 0x5a, 0x0e, 0x00, 0x36, 0x2d, 0x7b, 0x96, 0xa3, 0xbd,
	0xda, 0xe5, 0xe9, 0x35, 0xb1, 0xdd, 0x9a, 0x5e, 0xd1, 0x39, 0x6d, 0x31, 0x5a, 0xd2, 0x7b, 0xcb,
	0x6c, 0x09, 0x55, 0x8f, 0xca, 0xf0, 0xa5, 0x56, 0xa1, 0xd5, 0xbe, 0xe2, 0x26, 0xea, 0xb3, 0x1f,
	0x31, 0x2e, 0xd0, 0x60, 0xd5, 0xe1, 0x7b, 0xa8, 0x6b, 0xdd, 0xfe, 0xca, 0x07, 0x71, 0x55, 0xc7,
	0x13, 0x9f, 0x86, 0x43, 0xe3, 0x27, 0xc9, 0x34, 0xc9, 0x4e, 0x8b, 0xcb, 0x1d, 0xb9, 0xdc, 0x72,
	0x72, 0x21, 0xce, 0x91, 0xf4, 0xc6, 0xe1, 0x7a, 0x72, 0x3c, 0x4d, 0xb2, 0xd1, 0xfc, 0x06, 0x62,
	0x10, 0x0c, 0x41, 0x30, 0x04, 0x15, 0x83, 0x73, 0xbe, 0x12, 0x17, 0xfb, 0x05, 0xf2, 0x59, 0x9c,
	0xbc, 0x05, 0xf7, 0x2d, 0xc7, 0x40, 0x6c, 0xbb, 0x1c, 0x76, 0xb5, 0xd3, 0x5b, 0x38, 0x18, 0x05,
	0xff, 0xbb, 0xcd, 0x8e, 0xb2, 0xe4, 0xe5, 0xe9, 0xe3, 0xd1, 0x56, 0x1e, 0x4a, 0xc2, 0x66, 0x4d,
	0xba, 0x74, 0x60, 0xb8, 0x56, 0x3d, 0x8a, 0x23, 0x9d, 0x3a, 0xfc, 0x59, 0x79, 0xd6, 0x93, 0x8b,
	0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2c, 0x37, 0x96, 0x2a, 0x4a, 0x01, 0x00, 0x00,
}
